import React from "react";
import { useContext, createContext, useState } from "react";
import Sentury from "../Header/assets/Sentury.svg";
import { MoreVertical, ChevronLast, ChevronFirst } from "lucide-react";
import { useDispatch, useSelector } from "react-redux";
import { changeHeaderName } from "../../reducer";
const SidebarContext = createContext();

export default function Sidebar({ children }) {
  const [expanded, setExpanded] = useState(true);
  return (
    <>
      <aside className="grid h-screen h-full">
        <nav className="h-full flex flex-col bg-black border-r shadow-sm">
          <div className="p-4 pb-1 flex justify-between items-center">
            <div className="flex gap-1.5">
              <img
                src={Sentury}
                className={`  overflow-hidden transition-all ${
                  expanded ? "w-[54px]" : "w-0"
                }`}
                alt="logo"
              />
              <span
                className={`rounded-md px-2 bg-gray-500/30 border- text-gray-500 font-semibold text-sm ${
                  !expanded && "hidden"
                } `}
              >
                Admin Portal
              </span>
            </div>
            <button
              onClick={() => setExpanded((curr) => !curr)}
              className="p-1 rounded-sm bg-black"
            >
              {expanded ? <Menu /> : <Menu />}
            </button>
          </div>
          <hr
            class={`h-px ${
              expanded ? "my-2" : "my-2"
            } bg-gray-200 border-0 dark:bg-gray-700`}
          ></hr>

          <SidebarContext.Provider value={{ expanded }}>
            <ul className="flex-1 px-3">{children}</ul>
          </SidebarContext.Provider>
        </nav>
      </aside>
    </>
  );
}

export function SidebarItem({ icon, text, active, alert }) {
  const { expanded } = useContext(SidebarContext);
  const dispatch = useDispatch();

  const handleClick = () => {
    dispatch(changeHeaderName({ newName: "Roles" }));
  };
  return (
    <div>
      <span
        className={`
        relative flex items-center py-2 px-3 my-1
        font-medium rounded-md cursor-pointer
        transition-colors group
        ${
          active
            ? "bg-gradient-to-tr from-indigo-200 to-indigo-100 text-indigo-800"
            : "hover:bg-indigo-50/20 text-gray-600"
        }
    `}
      >
        <HomeSvg />
        <span
          className={`text-gray-500 overflow-hidden transition-all ${
            expanded ? "w-52 ml-3" : "w-0"
          }`}
        >
          DashBoard
        </span>
        {alert && (
          <div
            className={`absolute right-2 w-2 h-2 rounded bg-indigo-400 ${
              expanded ? "" : "top-2"
            }`}
          />
        )}

        {!expanded && (
          <div
            className={`
          absolute left-full rounded-md px-2 py-1 ml-6
          bg-indigo-100 text-indigo-800 text-sm
          invisible opacity-20 -translate-x-3 transition-all
          group-hover:visible group-hover:opacity-100 group-hover:translate-x-0
      `}
          >
            <span className="text-zinc-700">DashBoard</span>
          </div>
        )}
      </span>
      <span
        className={`text-gray-500 text-sm font-semibold ${!expanded && "hidden"}
      `}
      >
        Users
      </span>

      <button
        onClick={() => {
          console.log("Work");
          dispatch(changeHeaderName({ newName: "Roles" }));
        }}
        className={`
        flex items-center py-2 px-3 my-1
        font-medium rounded-md cursor-pointer
        transition-colors group w-full
        ${
          active
            ? "bg-gradient-to-tr from-indigo-200 to-indigo-100 text-indigo-800"
            : "hover:bg-indigo-50/20 text-gray-600"
        }
    `}
      >
        <UserEdit />
        <span
          className={`text-gray-500 overflow-hidden transition-all ${
            expanded ? "w-42 ml-3" : "w-0"
          }`}
        >
          Roles
        </span>
        {alert && (
          <div
            className={`absolute right-2 w-2 h-2 rounded bg-indigo-400 ${
              expanded ? "" : "top-2"
            }`}
          />
        )}

        {!expanded && (
          <div
            className={`
          absolute left-full rounded-md px-2 py-1 ml-6
          bg-indigo-100 text-indigo-800 text-sm
          invisible opacity-20 -translate-x-3 transition-all
          group-hover:visible group-hover:opacity-100 group-hover:translate-x-0
      `}
          >
            <span>Roles</span>
          </div>
        )}
      </button>

      <button
        onClick={() => {
          dispatch(changeHeaderName({ newName: "Staff" }));
        }}
        className={`
        relative flex items-center py-2 px-3 my-1
        font-medium rounded-md cursor-pointer
        transition-colors group w-full
        ${
          active
            ? "bg-gradient-to-tr from-indigo-200 to-indigo-100 text-indigo-800"
            : "hover:bg-indigo-50/20 text-gray-600"
        }
    `}
      >
        <Assigment />
        <span
          className={`text-gray-500 overflow-hidden transition-all ${
            expanded ? "w-42 ml-3" : "w-0"
          }`}
        >
          Staff
        </span>
        {alert && (
          <div
            className={`absolute right-2 w-2 h-2 rounded bg-indigo-400 ${
              expanded ? "" : "top-2"
            }`}
          />
        )}

        {!expanded && (
          <div
            className={`
          absolute left-full rounded-md px-2 py-1 ml-6
          bg-indigo-100 text-indigo-800 text-sm
          invisible opacity-20 -translate-x-3 transition-all
          group-hover:visible group-hover:opacity-100 group-hover:translate-x-0
      `}
          >
            <span className="text-zinc-700">Staff</span>
          </div>
        )}
      </button>

      <button
        onClick={() => {
          dispatch(changeHeaderName({ newName: "Client users" }));
        }}
        className={`
        relative flex items-center py-2 px-3 my-1
        font-medium rounded-md cursor-pointer
        transition-colors group w-full
        ${
          active
            ? "bg-gradient-to-tr from-indigo-200 to-indigo-100 text-indigo-800"
            : "hover:bg-indigo-50/20 text-gray-600"
        }
    `}
      >
        <Client />
        <span
          className={`text-gray-500 overflow-hidden transition-all ${
            expanded ? "w-42 ml-3" : "w-0"
          }`}
        >
          Client users
        </span>
        {alert && (
          <div
            className={`absolute right-2 w-2 h-2 rounded bg-indigo-400 ${
              expanded ? "" : "top-2"
            }`}
          />
        )}

        {!expanded && (
          <div
            className={`
          absolute left-full rounded-md px-2 py-1 ml-6
          bg-indigo-100 text-indigo-800 text-sm
          invisible opacity-20 -translate-x-3 transition-all
          group-hover:visible group-hover:opacity-100 group-hover:translate-x-0
      `}
          >
            <span className="text-zinc-700">Client users</span>
          </div>
        )}
      </button>

      <span
        className={`text-gray-500 text-sm font-semibold ${
          !expanded && "hidden"
        }`}
      >
        Settings
      </span>

      <button
        onClick={() => {
          dispatch(changeHeaderName({ newName: "Cases" }));
        }}
        className={`
        relative flex items-center py-2 px-3 my-1
        font-medium rounded-md cursor-pointer
        transition-colors group w-full
        ${
          active
            ? "bg-gradient-to-tr from-indigo-200 to-indigo-100 text-indigo-800"
            : "hover:bg-indigo-50/20 text-gray-600"
        }
    `}
      >
        <Cases />
        <span
          className={`text-gray-500 overflow-hidden transition-all ${
            expanded ? "w-42 ml-3" : "w-0"
          }`}
        >
          Cases
        </span>
        {alert && (
          <div
            className={`absolute right-2 w-2 h-2 rounded bg-indigo-400 ${
              expanded ? "" : "top-2"
            }`}
          />
        )}

        {!expanded && (
          <div
            className={`
          absolute left-full rounded-md px-2 py-1 ml-6
          bg-indigo-100 text-indigo-800 text-sm
          invisible opacity-20 -translate-x-3 transition-all
          group-hover:visible group-hover:opacity-100 group-hover:translate-x-0
      `}
          >
            <span className="text-zinc-700">Cases</span>
          </div>
        )}
      </button>

      <button
        onClick={() => {
          dispatch(changeHeaderName({ newName: "Workflows" }));
        }}
        className={`
        relative flex items-center py-2 px-3 my-1
        font-medium rounded-md cursor-pointer
        transition-colors group w-full
        ${
          active
            ? "bg-gradient-to-tr from-indigo-200 to-indigo-100 text-indigo-800"
            : "hover:bg-indigo-50/20 text-gray-600"
        }
    `}
      >
        <WorkFlows />
        <span
          className={`text-gray-500 overflow-hidden transition-all ${
            expanded ? "w-42 ml-3" : "w-0"
          }`}
        >
          Workflows
        </span>
        {alert && (
          <div
            className={`absolute right-2 w-2 h-2 rounded bg-indigo-400 ${
              expanded ? "" : "top-2"
            }`}
          />
        )}

        {!expanded && (
          <div
            className={`
          absolute left-full rounded-md px-2 py-1 ml-6
          bg-indigo-100 text-indigo-800 text-sm
          invisible opacity-20 -translate-x-3 transition-all
          group-hover:visible group-hover:opacity-100 group-hover:translate-x-0
      `}
          >
            <span className="text-zinc-700">Workflows</span>
          </div>
        )}
      </button>

      <button
        onClick={() => {
          dispatch(changeHeaderName({ newName: "Data dictionary" }));
        }}
        className={`
        relative flex items-center py-2 px-3 my-1
        font-medium rounded-md cursor-pointer
        transition-colors group w-full
        ${
          active
            ? "bg-gradient-to-tr from-indigo-200 to-indigo-100 text-indigo-800"
            : "hover:bg-indigo-50/20 text-gray-600"
        }
    `}
      >
        <Datadictionary />
        <span
          className={`text-gray-500 overflow-hidden transition-all ${
            expanded ? "w-42 ml-3" : "w-0"
          }`}
        >
          Data dictionary
        </span>
        {alert && (
          <div
            className={`absolute right-2 w-2 h-2 rounded bg-indigo-400 ${
              expanded ? "" : "top-2"
            }`}
          />
        )}

        {!expanded && (
          <div
            className={`
          absolute left-full rounded-md px-2 py-1 ml-6
          bg-indigo-100 text-indigo-800 text-sm
          invisible opacity-20 -translate-x-3 transition-all
          group-hover:visible group-hover:opacity-100 group-hover:translate-x-0
      `}
          >
            <span className="text-zinc-700">Data dictionary</span>
          </div>
        )}
      </button>

      <button
        onClick={() => {
          dispatch(changeHeaderName({ newName: "Forms" }));
        }}
        className={`
        relative flex items-center py-2 px-3 my-1
        font-medium rounded-md cursor-pointer
        transition-colors group w-full
        ${
          active
            ? "bg-gradient-to-tr from-indigo-200 to-indigo-100 text-indigo-800"
            : "hover:bg-indigo-50/20 text-gray-600"
        }
    `}
      >
        <Forms />
        <span
          className={`text-gray-500 overflow-hidden transition-all ${
            expanded ? "w-42 ml-3" : "w-0"
          }`}
        >
          Forms
        </span>
        {alert && (
          <div
            className={`absolute right-2 w-2 h-2 rounded bg-indigo-400 ${
              expanded ? "" : "top-2"
            }`}
          />
        )}

        {!expanded && (
          <div
            className={`
          absolute left-full rounded-md px-2 py-1 ml-6
          bg-indigo-100 text-indigo-800 text-sm
          invisible opacity-20 -translate-x-3 transition-all
          group-hover:visible group-hover:opacity-100 group-hover:translate-x-0
      `}
          >
            <span className="text-zinc-700">Forms</span>
          </div>
        )}
      </button>

      <button
        onClick={() => {
          dispatch(changeHeaderName({ newName: "Email templates" }));
        }}
        className={`
        relative flex items-center py-2 px-3 my-1
        font-medium rounded-md cursor-pointer
        transition-colors group w-full
        ${
          active
            ? "bg-gradient-to-tr from-indigo-200 to-indigo-100 text-indigo-800"
            : "hover:bg-indigo-50/20 text-gray-600"
        }
    `}
      >
        <Emailtemplates />
        <span
          className={`text-gray-500 overflow-hidden transition-all ${
            expanded ? "w-42 ml-3" : "w-0"
          }`}
        >
          Email templates
        </span>
        {alert && (
          <div
            className={`absolute right-2 w-2 h-2 rounded bg-indigo-400 ${
              expanded ? "" : "top-2"
            }`}
          />
        )}

        {!expanded && (
          <div
            className={`
          absolute left-full rounded-md px-2 py-1 ml-6
          bg-indigo-100 text-indigo-800 text-sm
          invisible opacity-20 -translate-x-3 transition-all
          group-hover:visible group-hover:opacity-100 group-hover:translate-x-0
      `}
          >
            <span className="text-zinc-700">Email Template</span>
          </div>
        )}
      </button>

      <button onClick={() => {
          dispatch(changeHeaderName({ newName: 'Queues' }));
        }}
        className={`
        relative flex items-center py-2 px-3 my-1
        font-medium rounded-md cursor-pointer
        transition-colors group w-full
        ${
          active
            ? "bg-gradient-to-tr from-indigo-200 to-indigo-100 text-indigo-800"
            : "hover:bg-indigo-50/20 text-gray-600"
        }
    `}
      >
        <Queues />
        <span
          className={`text-gray-500 overflow-hidden transition-all ${
            expanded ? "w-42 ml-3" : "w-0"
          }`}
        >
          Queues
        </span>
        {alert && (
          <div
            className={`absolute right-2 w-2 h-2 rounded bg-indigo-400 ${
              expanded ? "" : "top-2"
            }`}
          />
        )}

        {!expanded && (
          <div
            className={`
          absolute left-full rounded-md px-2 py-1 ml-6
          bg-indigo-100 text-indigo-800 text-sm
          invisible opacity-20 -translate-x-3 transition-all
          group-hover:visible group-hover:opacity-100 group-hover:translate-x-0
      `}
          >
            <span className="text-zinc-700">Queues</span>
          </div>
        )}
      </button>

      <button onClick={() => {
          dispatch(changeHeaderName({ newName: 'Setups' }));
        }}
        className={`
        relative flex items-center py-2 px-3 my-1
        font-medium rounded-md cursor-pointer
        transition-colors group w-full
        ${
          active
            ? "bg-gradient-to-tr from-indigo-200 to-indigo-100 text-indigo-800"
            : "hover:bg-indigo-50/20 text-gray-600"
        }
    `}
      >
        <Setups />
        <span
          className={`text-gray-500 overflow-hidden transition-all ${
            expanded ? "w-42 ml-3" : "w-0"
          }`}
        >
          Setups
        </span>
        {alert && (
          <div
            className={`absolute right-2 w-2 h-2 rounded bg-indigo-400 ${
              expanded ? "" : "top-2"
            }`}
          />
        )}

        {!expanded && (
          <div
            className={`
          absolute left-full rounded-md px-2 py-1 ml-6
          bg-indigo-100 text-indigo-800 text-sm
          invisible opacity-20 -translate-x-3 transition-all
          group-hover:visible group-hover:opacity-100 group-hover:translate-x-0
      `}
          >
            <span className="text-zinc-700">Setups</span>
          </div>
        )}
      </button>
    </div>
  );
}

export const HomeSvg = () => {
  return (
    <svg
      width="24"
      height="17"
      viewBox="0 0 16 17"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M1.75641 15.2436H5.46798V9.96153C5.46798 9.73996 5.54292 9.55423 5.69281 9.40433C5.84271 9.25444 6.02845 9.1795 6.25003 9.1795H9.74998C9.97157 9.1795 10.1573 9.25444 10.3072 9.40433C10.4571 9.55423 10.532 9.73996 10.532 9.96153V15.2436H14.2436V6.02993C14.2436 5.97864 14.2324 5.93217 14.2099 5.8905C14.1875 5.84883 14.157 5.81197 14.1186 5.7799L8.18271 1.31733C8.13142 1.27673 8.07052 1.25643 8.00001 1.25643C7.92949 1.25643 7.86859 1.27673 7.81731 1.31733L1.88143 5.7799C1.84296 5.81197 1.81251 5.84883 1.79008 5.8905C1.76763 5.93217 1.75641 5.97864 1.75641 6.02993V15.2436ZM0.500031 15.2436V6.03205C0.500031 5.78152 0.554389 5.54648 0.663105 5.32695C0.771805 5.1074 0.926847 4.92578 1.12823 4.78208L7.06411 0.307726C7.33372 0.0983263 7.64429 -0.00637436 7.99581 -0.00637436C8.34732 -0.00637436 8.66069 0.0983263 8.93591 0.307726L14.8718 4.78208C15.0732 4.92578 15.2282 5.1074 15.3369 5.32695C15.4456 5.54648 15.5 5.78152 15.5 6.03205V15.2436C15.5 15.5856 15.3761 15.8805 15.1283 16.1283C14.8805 16.3761 14.5856 16.5 14.2436 16.5H10.0577C9.83612 16.5 9.65039 16.425 9.50051 16.2751C9.35061 16.1252 9.27566 15.9395 9.27566 15.7179V10.4359H6.72436V15.7179C6.72436 15.9395 6.64941 16.1252 6.49951 16.2751C6.34962 16.425 6.16389 16.5 5.94231 16.5H1.75641C1.41444 16.5 1.11956 16.3761 0.871755 16.1283C0.623939 15.8805 0.500031 15.5856 0.500031 15.2436Z"
        fill="#848484"
      />
    </svg>
  );
};

export const UserEdit = () => {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M4.49997 18.5256V17.3013C4.49997 16.7799 4.63918 16.3168 4.91759 15.9119C5.19601 15.507 5.56108 15.1957 6.01279 14.9782C7.04398 14.5047 8.05279 14.1485 9.03924 13.9096C10.0257 13.6707 11.0126 13.5513 11.9999 13.5513C12.5417 13.5513 13.0798 13.5891 13.6142 13.6648C14.1487 13.7404 14.6897 13.8511 15.2371 13.9968L14.2121 15.0102C13.8384 14.945 13.4712 14.895 13.1105 14.86C12.7498 14.8251 12.3796 14.8077 11.9999 14.8077C11.0814 14.8077 10.1778 14.908 9.28924 15.1086C8.40066 15.3093 7.49055 15.6397 6.55892 16.1C6.3149 16.2269 6.12014 16.3986 5.97462 16.615C5.8291 16.8315 5.75634 17.0602 5.75634 17.3013V18.0513H12.1666V19.3076H5.28202C5.06044 19.3076 4.8747 19.2327 4.72482 19.0828C4.57492 18.9329 4.49997 18.7472 4.49997 18.5256ZM14.1153 19.7179V18.5109C14.1153 18.2937 14.1585 18.0882 14.2448 17.8945C14.3312 17.7007 14.444 17.532 14.5833 17.3884L19.5409 12.4564C19.6675 12.3303 19.8028 12.242 19.9469 12.1913C20.0911 12.1407 20.2353 12.1154 20.3794 12.1154C20.5367 12.1154 20.6888 12.1449 20.8357 12.2038C20.9827 12.2628 21.1162 12.3513 21.2364 12.4692L22.1614 13.4038C22.276 13.5282 22.361 13.6628 22.4166 13.8077C22.4721 13.9526 22.4999 14.0974 22.4999 14.2423C22.4999 14.3872 22.4702 14.5346 22.4108 14.6846C22.3514 14.8346 22.2639 14.973 22.1483 15.0998L17.2268 20.0307C17.0833 20.1743 16.9146 20.2884 16.7208 20.373C16.5271 20.4577 16.3216 20.5 16.1044 20.5H14.8974C14.6758 20.5 14.4901 20.425 14.3402 20.2751C14.1903 20.1252 14.1153 19.9395 14.1153 19.7179ZM15.3076 19.3077H16.2576L19.5038 16.0461L19.0442 15.5711L18.5788 15.1019L15.3076 18.3577V19.3077ZM19.0442 15.5711L18.5788 15.1019L19.5038 16.0461L19.0442 15.5711ZM11.9999 11.682C11.0622 11.682 10.2648 11.3534 9.60759 10.6962C8.95038 10.039 8.62177 9.24157 8.62177 8.30385C8.62177 7.36615 8.95038 6.5687 9.60759 5.9115C10.2648 5.2543 11.0622 4.9257 11.9999 4.9257C12.9376 4.9257 13.7351 5.2543 14.3923 5.9115C15.0495 6.5687 15.3781 7.36615 15.3781 8.30385C15.3781 9.24157 15.0495 10.039 14.3923 10.6962C13.7351 11.3534 12.9376 11.682 11.9999 11.682ZM11.9994 10.4256C12.5925 10.4256 13.0945 10.2191 13.5054 9.8061C13.9163 9.39307 14.1217 8.89125 14.1217 8.30065C14.1217 7.71005 13.9165 7.2093 13.5059 6.7984C13.0953 6.38751 12.5935 6.18207 12.0004 6.18207C11.4074 6.18207 10.9054 6.3874 10.4945 6.79805C10.0836 7.2087 9.87814 7.71063 9.87814 8.30385C9.87814 8.89232 10.0834 9.39307 10.494 9.8061C10.9045 10.2191 11.4064 10.4256 11.9994 10.4256Z"
        fill="#848484"
      />
    </svg>
  );
};
export const SideButton = () => {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M4.1282 17.5C3.95022 17.5 3.80102 17.4394 3.68062 17.3184C3.56021 17.1973 3.5 17.0473 3.5 16.8684C3.5 16.6895 3.56021 16.5406 3.68062 16.4218C3.80102 16.303 3.95022 16.2436 4.1282 16.2436H13.0833C13.2613 16.2436 13.4105 16.3041 13.5309 16.4252C13.6513 16.5462 13.7115 16.6962 13.7115 16.8751C13.7115 17.0541 13.6513 17.203 13.5309 17.3218C13.4105 17.4406 13.2613 17.5 13.0833 17.5H4.1282ZM4.1282 12.6013C3.95022 12.6013 3.80102 12.5407 3.68062 12.4197C3.56021 12.2986 3.5 12.1486 3.5 11.9697C3.5 11.7908 3.56021 11.6419 3.68062 11.5231C3.80102 11.4043 3.95022 11.3449 4.1282 11.3449H13.0833C13.2613 11.3449 13.4105 11.4054 13.5309 11.5265C13.6513 11.6475 13.7115 11.7975 13.7115 11.9764C13.7115 12.1554 13.6513 12.3043 13.5309 12.4231C13.4105 12.5419 13.2613 12.6013 13.0833 12.6013H4.1282ZM4.1282 7.7564C3.95022 7.7564 3.80102 7.69587 3.68062 7.57482C3.56021 7.45377 3.5 7.30378 3.5 7.12485C3.5 6.9459 3.56021 6.79702 3.68062 6.67822C3.80102 6.55942 3.95022 6.50002 4.1282 6.50002H13.0833C13.2613 6.50002 13.4105 6.56055 13.5309 6.6816C13.6513 6.80265 13.7115 6.95265 13.7115 7.1316C13.7115 7.31053 13.6513 7.4594 13.5309 7.5782C13.4105 7.697 13.2613 7.7564 13.0833 7.7564H4.1282Z"
        fill="#848484"
      />
      <path
        d="M16.5891 15.9467L20.0244 12.5378C20.1803 12.3775 20.2583 12.1937 20.2583 11.9862C20.2583 11.7788 20.1803 11.5972 20.0244 11.4416L16.5994 8.0359C16.4789 7.91538 16.3313 7.85352 16.1567 7.85032C15.9822 7.84712 15.8314 7.90898 15.7045 8.0359C15.5776 8.16282 15.5141 8.31196 15.5141 8.48332C15.5141 8.65467 15.5776 8.80382 15.7045 8.93075L18.7859 11.9897L15.6943 15.0621C15.5673 15.1805 15.5039 15.3258 15.5039 15.498C15.5039 15.6703 15.5673 15.8198 15.6943 15.9467C15.8126 16.0673 15.9596 16.1275 16.1353 16.1275C16.3109 16.1275 16.4622 16.0673 16.5891 15.9467Z"
        fill="#848484"
      />
    </svg>
  );
};

export const Assigment = () => {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M5.06422 20.5C4.63442 20.5 4.26629 20.3467 3.95982 20.0403C3.65336 19.7338 3.50012 19.3657 3.50012 18.9359V5.06412C3.50012 4.63432 3.65336 4.26619 3.95982 3.95972C4.26629 3.65326 4.63442 3.50002 5.06422 3.50002H9.99117C9.93987 2.93166 10.1136 2.42354 10.5123 1.97567C10.911 1.52781 11.4069 1.30387 12.0001 1.30387C12.5933 1.30387 13.0892 1.52781 13.4879 1.97567C13.8866 2.42354 14.0603 2.93166 14.009 3.50002H18.936C19.3658 3.50002 19.7339 3.65326 20.0404 3.95972C20.3468 4.26619 20.5001 4.63432 20.5001 5.06412V18.9359C20.5001 19.3657 20.3468 19.7338 20.0404 20.0403C19.7339 20.3467 19.3658 20.5 18.936 20.5H5.06422ZM12.0001 3.95385C12.2168 3.95385 12.3959 3.88302 12.5376 3.74135C12.6793 3.59968 12.7501 3.42052 12.7501 3.20385C12.7501 2.99147 12.6793 2.81337 12.5376 2.66955C12.3959 2.52575 12.2168 2.45385 12.0001 2.45385C11.7834 2.45385 11.6043 2.52575 11.4626 2.66955C11.3209 2.81337 11.2501 2.99147 11.2501 3.20385C11.2501 3.42052 11.3209 3.59968 11.4626 3.74135C11.6043 3.88302 11.7834 3.95385 12.0001 3.95385ZM4.7565 18.3974C5.70608 17.4893 6.79365 16.7642 8.0192 16.2221C9.24476 15.68 10.5712 15.409 11.9984 15.409C13.4256 15.409 14.7526 15.68 15.9793 16.2221C17.206 16.7642 18.2941 17.4893 19.2437 18.3974V5.06412C19.2437 4.98719 19.2116 4.91668 19.1475 4.85258C19.0834 4.78846 19.0129 4.7564 18.936 4.7564H5.06422C4.98729 4.7564 4.91677 4.78846 4.85267 4.85258C4.78856 4.91668 4.7565 4.98719 4.7565 5.06412V18.3974ZM12.0238 13.2718C12.9242 13.2718 13.6871 12.9592 14.3123 12.334C14.9375 11.7088 15.2501 10.946 15.2501 10.0455C15.2501 9.14511 14.9375 8.38229 14.3123 7.75707C13.6871 7.13188 12.9242 6.81927 12.0238 6.81927C11.1234 6.81927 10.3606 7.13188 9.73537 7.75707C9.11016 8.38229 8.79755 9.14511 8.79755 10.0455C8.79755 10.946 9.11016 11.7088 9.73537 12.334C10.3606 12.9592 11.1234 13.2718 12.0238 13.2718ZM5.8975 19.2436H18.1091V19.0423C17.2202 18.2491 16.259 17.6547 15.2256 17.259C14.1921 16.8632 13.117 16.6653 12.0001 16.6653C10.8911 16.6653 9.81952 16.8616 8.78532 17.2541C7.75114 17.6467 6.78853 18.2363 5.8975 19.0231V19.2436ZM12.027 12.0154C11.48 12.0154 11.0144 11.8233 10.6302 11.4391C10.246 11.0549 10.0539 10.5904 10.0539 10.0455C10.0539 9.50066 10.246 9.03613 10.6302 8.65193C11.0144 8.26774 11.4789 8.07565 12.0238 8.07565C12.5687 8.07565 13.0332 8.26819 13.4174 8.65327C13.8016 9.03836 13.9937 9.50137 13.9937 10.0423C13.9937 10.5893 13.8012 11.0549 13.4161 11.4391C13.031 11.8233 12.568 12.0154 12.027 12.0154Z"
        fill="#848484"
      />
    </svg>
  );
};

export const Client = () => {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M2.01288 20.2307C1.83458 20.2307 1.6853 20.1703 1.56505 20.0495C1.44482 19.9287 1.3847 19.7787 1.3847 19.5995C1.3847 19.4203 1.44482 19.2713 1.56505 19.1525C1.6853 19.0337 1.83458 18.9743 2.01288 18.9743H21.9872C22.1655 18.9743 22.3148 19.0348 22.4351 19.1556C22.5553 19.2764 22.6154 19.4264 22.6154 19.6056C22.6154 19.7847 22.5553 19.9337 22.4351 20.0525C22.3148 20.1713 22.1655 20.2307 21.9872 20.2307H2.01288Z"
        fill="#848484"
      />
      <path
        d="M4.06425 17.7307C3.63445 17.7307 3.26632 17.5775 2.95985 17.271C2.65339 16.9646 2.50015 16.5965 2.50015 16.1666V5.2949C2.50015 4.8651 2.65339 4.49697 2.95985 4.19052C3.26632 3.88405 3.63445 3.73082 4.06425 3.73082H19.936C20.3658 3.73082 20.7339 3.88405 21.0404 4.19052C21.3469 4.49697 21.5001 4.8651 21.5001 5.2949V16.1666C21.5001 16.5965 21.3469 16.9646 21.0404 17.271C20.7339 17.5775 20.3658 17.7307 19.936 17.7307H4.06425ZM4.06425 16.4744H19.936C20.0129 16.4744 20.0835 16.4423 20.1476 16.3782C20.2117 16.3141 20.2437 16.2436 20.2437 16.1666V5.2949C20.2437 5.21798 20.2117 5.14746 20.1476 5.08335C20.0835 5.01925 20.0129 4.98719 19.936 4.98719H4.06425C3.98732 4.98719 3.9168 5.01925 3.8527 5.08335C3.78859 5.14746 3.75653 5.21798 3.75653 5.2949V16.1666C3.75653 16.2436 3.78859 16.3141 3.8527 16.3782C3.9168 16.4423 3.98732 16.4744 4.06425 16.4744Z"
        fill="#848484"
      />
      <path
        d="M15.7489 14.4776H8.25153V14.1301C8.25153 13.4814 8.59437 12.9605 9.28005 12.5673C9.96573 12.1742 10.8725 11.9776 12.0002 11.9776C13.128 11.9776 14.0347 12.1742 14.7204 12.5673C15.4061 12.9605 15.7489 13.4814 15.7489 14.1301V14.4776Z"
        fill="#848484"
      />
      <path
        d="M13.2499 9.98366C12.9164 10.3172 12.4998 10.484 12.0002 10.484C11.5007 10.484 11.0841 10.3172 10.7506 9.98366C10.417 9.65011 10.2503 9.23355 10.2503 8.73398C10.2503 8.23442 10.417 7.81787 10.7506 7.48433C11.0841 7.15078 11.5007 6.98401 12.0002 6.98401C12.4998 6.98401 12.9164 7.15078 13.2499 7.48433C13.5834 7.81787 13.7502 8.23442 13.7502 8.73398C13.7502 9.23355 13.5834 9.65011 13.2499 9.98366Z"
        fill="#848484"
      />
    </svg>
  );
};

export const Cases = () => {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M11.9866 15.1859C12.4635 15.1859 12.867 15.0236 13.1971 14.699C13.5272 14.3745 13.6923 13.9748 13.6923 13.5C13.6923 13.0252 13.5272 12.6245 13.1971 12.2978C12.867 11.9711 12.4662 11.8077 11.9949 11.8077C11.5235 11.8077 11.1255 11.973 10.801 12.3036C10.4764 12.6342 10.3141 13.0336 10.3141 13.5018C10.3141 13.97 10.4777 14.3677 10.8049 14.695C11.1321 15.0222 11.526 15.1859 11.9866 15.1859ZM4.06413 20.5C3.63433 20.5 3.2662 20.3467 2.95973 20.0403C2.65326 19.7338 2.50003 19.3657 2.50003 18.9359V8.06413C2.50003 7.63433 2.65326 7.26619 2.95973 6.95973C3.2662 6.65326 3.63433 6.50003 4.06413 6.50003H8.50003V4.56415C8.50003 4.13435 8.65326 3.76623 8.95973 3.45978C9.2662 3.15331 9.63433 3.00008 10.0641 3.00008H13.9359C14.3657 3.00008 14.7338 3.15331 15.0403 3.45978C15.3467 3.76623 15.5 4.13435 15.5 4.56415V6.50003H19.9359C20.3657 6.50003 20.7338 6.65326 21.0403 6.95973C21.3468 7.26619 21.5 7.63433 21.5 8.06413V18.9359C21.5 19.3657 21.3468 19.7338 21.0403 20.0403C20.7338 20.3467 20.3657 20.5 19.9359 20.5H4.06413ZM4.06413 19.2436H19.9359C20.0128 19.2436 20.0833 19.2115 20.1474 19.1474C20.2115 19.0833 20.2436 19.0128 20.2436 18.9359V8.06413C20.2436 7.98719 20.2115 7.91668 20.1474 7.85258C20.0833 7.78846 20.0128 7.7564 19.9359 7.7564H4.06413C3.9872 7.7564 3.91668 7.78846 3.85258 7.85258C3.78846 7.91668 3.75641 7.98719 3.75641 8.06413V18.9359C3.75641 19.0128 3.78846 19.0833 3.85258 19.1474C3.91668 19.2115 3.9872 19.2436 4.06413 19.2436ZM9.75641 6.50003H14.2436V4.56415C14.2436 4.48723 14.2115 4.41672 14.1474 4.3526C14.0833 4.2885 14.0128 4.25645 13.9359 4.25645H10.0641C9.9872 4.25645 9.91668 4.2885 9.85258 4.3526C9.78846 4.41672 9.75641 4.48723 9.75641 4.56415V6.50003Z"
        fill="#848484"
      />
    </svg>
  );
};

export const WorkFlows = () => {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M15.2973 19.4743V17.6858H12.9358C12.5074 17.6858 12.1396 17.5333 11.8324 17.2283C11.5253 16.9233 11.3717 16.5544 11.3717 16.1217V7.564H8.71268V9.41021C8.71268 9.76597 8.58796 10.0675 8.33851 10.3148C8.08904 10.5621 7.78857 10.6858 7.43708 10.6858H3.52551C3.17403 10.6858 2.87355 10.5621 2.62408 10.3148C2.37463 10.0675 2.24991 9.76597 2.24991 9.41021V4.52556C2.24991 4.17407 2.37463 3.8736 2.62408 3.62413C2.87355 3.37468 3.17403 3.24995 3.52551 3.24995H7.43708C7.78857 3.24995 8.08904 3.37468 8.33851 3.62413C8.58796 3.8736 8.71268 4.17407 8.71268 4.52556V6.30763H15.2973V4.52556C15.2973 4.17407 15.4221 3.8736 15.6715 3.62413C15.921 3.37468 16.2215 3.24995 16.5729 3.24995H20.4743C20.8257 3.24995 21.1262 3.37468 21.3757 3.62413C21.6251 3.8736 21.7499 4.17407 21.7499 4.52556V9.41021C21.7499 9.76597 21.6251 10.0675 21.3757 10.3148C21.1262 10.5621 20.8257 10.6858 20.4743 10.6858H16.5729C16.2215 10.6858 15.921 10.5621 15.6715 10.3148C15.4221 10.0675 15.2973 9.76597 15.2973 9.41021V7.564H12.6281V16.1217C12.6281 16.2115 12.6569 16.2852 12.7146 16.3429C12.7723 16.4006 12.846 16.4294 12.9358 16.4294H15.2973V14.5833C15.2973 14.2318 15.4221 13.9313 15.6715 13.6818C15.921 13.4324 16.2215 13.3076 16.5729 13.3076H20.4743C20.8257 13.3076 21.1262 13.4324 21.3757 13.6818C21.6251 13.9313 21.7499 14.2318 21.7499 14.5833V19.4743C21.7499 19.8258 21.6251 20.1263 21.3757 20.3757C21.1262 20.6252 20.8257 20.7499 20.4743 20.7499H16.5729C16.2215 20.7499 15.921 20.6252 15.6715 20.3757C15.4221 20.1263 15.2973 19.8258 15.2973 19.4743ZM16.5537 9.42943H20.4935V4.50633H16.5537V9.42943ZM16.5537 19.4935H20.4935V14.564H16.5537V19.4935ZM3.50628 9.42943H7.45631V4.50633H3.50628V9.42943Z"
        fill="#848484"
      />
    </svg>
  );
};

export const Datadictionary = () => {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M7.33989 6.59498C7.02617 6.59498 6.75992 6.70478 6.54112 6.92438C6.32232 7.14398 6.21292 7.41064 6.21292 7.72435C6.21292 8.03807 6.32272 8.30433 6.54232 8.52313C6.76192 8.74193 7.02857 8.85133 7.34229 8.85133C7.65601 8.85133 7.92227 8.74153 8.14107 8.52193C8.35987 8.30233 8.46927 8.03567 8.46927 7.72195C8.46927 7.40822 8.35947 7.14196 8.13987 6.92316C7.92027 6.70437 7.65361 6.59498 7.33989 6.59498ZM7.33989 16.1488C7.02617 16.1488 6.75992 16.2586 6.54112 16.4782C6.32232 16.6978 6.21292 16.9644 6.21292 17.2782C6.21292 17.5919 6.32272 17.8582 6.54232 18.077C6.76192 18.2957 7.02857 18.4051 7.34229 18.4051C7.65601 18.4051 7.92227 18.2953 8.14107 18.0757C8.35987 17.8561 8.46927 17.5895 8.46927 17.2758C8.46927 16.962 8.35947 16.6958 8.13987 16.477C7.92027 16.2582 7.65361 16.1488 7.33989 16.1488ZM4.31034 3.81805H19.6807C19.9194 3.81805 20.1157 3.8947 20.2694 4.04798C20.4232 4.20126 20.5 4.4012 20.5 4.64778V10.6795C20.5 10.959 20.4232 11.1888 20.2694 11.3687C20.1157 11.5486 19.9194 11.6385 19.6807 11.6385H4.31034C4.07766 11.6385 3.88445 11.5486 3.73072 11.3687C3.57697 11.1888 3.50009 10.959 3.50009 10.6795V4.64778C3.50009 4.4012 3.57697 4.20126 3.73072 4.04798C3.88445 3.8947 4.07766 3.81805 4.31034 3.81805ZM4.75647 5.07443V10.3821H19.2437V5.07443H4.75647ZM4.31034 13.3616H19.6064C19.8526 13.3616 20.0631 13.455 20.2378 13.6418C20.4126 13.8286 20.5 14.0465 20.5 14.2954V20.2205C20.5 20.5244 20.4126 20.7623 20.2378 20.9343C20.0631 21.1063 19.8526 21.1923 19.6064 21.1923H4.39369C4.13642 21.1923 3.92317 21.1063 3.75394 20.9343C3.58471 20.7623 3.50009 20.5244 3.50009 20.2205V14.2954C3.50009 14.0465 3.5736 13.8286 3.72062 13.6418C3.86762 13.455 4.06419 13.3616 4.31034 13.3616ZM4.75647 14.618V19.9359H19.2437V14.618H4.75647Z"
        fill="#848484"
      />
    </svg>
  );
};

export const Forms = () => {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M3.96917 20.5C3.53937 20.5 3.17123 20.3467 2.86477 20.0403C2.55832 19.7338 2.40509 19.3657 2.40509 18.9359V5.06413C2.40509 4.63433 2.55832 4.2662 2.86477 3.95973C3.17123 3.65326 3.53937 3.50003 3.96917 3.50003H20.0307C20.4605 3.50003 20.8286 3.65326 21.1351 3.95973C21.4415 4.2662 21.5947 4.63433 21.5947 5.06413V18.9359C21.5947 19.3657 21.4415 19.7338 21.1351 20.0403C20.8286 20.3467 20.4605 20.5 20.0307 20.5H3.96917ZM3.96917 19.2436H20.0307C20.1076 19.2436 20.1781 19.2115 20.2422 19.1474C20.3063 19.0833 20.3384 19.0128 20.3384 18.9359V5.06413C20.3384 4.9872 20.3063 4.91668 20.2422 4.85258C20.1781 4.78847 20.1076 4.75641 20.0307 4.75641H3.96917C3.89223 4.75641 3.82172 4.78847 3.75762 4.85258C3.69352 4.91668 3.66147 4.9872 3.66147 5.06413V18.9359C3.66147 19.0128 3.69352 19.0833 3.75762 19.1474C3.82172 19.2115 3.89223 19.2436 3.96917 19.2436ZM8.99992 16.75C9.21273 16.75 9.39093 16.6782 9.53452 16.5346C9.6781 16.391 9.74989 16.2128 9.74989 16C9.74989 15.7872 9.6781 15.609 9.53452 15.4654C9.39093 15.3218 9.21273 15.25 8.99992 15.25H5.99992C5.7871 15.25 5.6089 15.3218 5.46532 15.4654C5.32173 15.609 5.24994 15.7872 5.24994 16C5.24994 16.2128 5.32173 16.391 5.46532 16.5346C5.6089 16.6782 5.7871 16.75 5.99992 16.75H8.99992ZM14.5499 12.5308L13.6518 11.6327C13.5031 11.484 13.3275 11.4106 13.1249 11.4125C12.9223 11.4144 12.7467 11.493 12.598 11.6481C12.4595 11.7968 12.3894 11.9724 12.3874 12.175C12.3855 12.3776 12.4589 12.5532 12.6076 12.7019L14.0018 14.0961C14.1586 14.2521 14.3415 14.3301 14.5505 14.3301C14.7595 14.3301 14.942 14.2521 15.098 14.0961L18.6172 10.5769C18.7659 10.4282 18.8419 10.2542 18.8451 10.0548C18.8483 9.85546 18.7723 9.67822 18.6172 9.52311C18.4621 9.36797 18.2839 9.29041 18.0826 9.29041C17.8813 9.29041 17.7031 9.36797 17.548 9.52311L14.5499 12.5308ZM8.99992 12.75C9.21273 12.75 9.39093 12.6782 9.53452 12.5346C9.6781 12.391 9.74989 12.2128 9.74989 12C9.74989 11.7872 9.6781 11.609 9.53452 11.4654C9.39093 11.3218 9.21273 11.25 8.99992 11.25H5.99992C5.7871 11.25 5.6089 11.3218 5.46532 11.4654C5.32173 11.609 5.24994 11.7872 5.24994 12C5.24994 12.2128 5.32173 12.391 5.46532 12.5346C5.6089 12.6782 5.7871 12.75 5.99992 12.75H8.99992ZM8.99992 8.74998C9.21273 8.74998 9.39093 8.67819 9.53452 8.53461C9.6781 8.39102 9.74989 8.21282 9.74989 8.00001C9.74989 7.78719 9.6781 7.60899 9.53452 7.46541C9.39093 7.32182 9.21273 7.25003 8.99992 7.25003H5.99992C5.7871 7.25003 5.6089 7.32182 5.46532 7.46541C5.32173 7.60899 5.24994 7.78719 5.24994 8.00001C5.24994 8.21282 5.32173 8.39102 5.46532 8.53461C5.6089 8.67819 5.7871 8.74998 5.99992 8.74998H8.99992Z"
        fill="#848484"
      />
    </svg>
  );
};

export const Emailtemplates = () => {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M4.06413 19.5C3.63433 19.5 3.2662 19.3467 2.95973 19.0403C2.65326 18.7338 2.50003 18.3657 2.50003 17.9359V6.0641C2.50003 5.6343 2.65326 5.26617 2.95973 4.9597C3.2662 4.65323 3.63433 4.5 4.06413 4.5H19.9359C20.3657 4.5 20.7338 4.65323 21.0403 4.9597C21.3468 5.26617 21.5 5.6343 21.5 6.0641V17.9359C21.5 18.3657 21.3468 18.7338 21.0403 19.0403C20.7338 19.3467 20.3657 19.5 19.9359 19.5H4.06413ZM20.2436 6.89095L12.4289 12.0083C12.3588 12.045 12.2895 12.0759 12.2212 12.1009C12.1528 12.1259 12.0791 12.1384 12 12.1384C11.9209 12.1384 11.8472 12.1259 11.7789 12.1009C11.7105 12.0759 11.6434 12.045 11.5776 12.0083L3.75641 6.89095V17.9359C3.75641 18.0256 3.78526 18.0993 3.84296 18.157C3.90066 18.2147 3.97438 18.2436 4.06413 18.2436H19.9359C20.0256 18.2436 20.0994 18.2147 20.1571 18.157C20.2148 18.0993 20.2436 18.0256 20.2436 17.9359V6.89095ZM12 10.9731L20.0423 5.75638H3.97438L12 10.9731ZM3.75641 7.09095V6.18633V6.21293V5.75638V6.20445V6.17225V7.09095Z"
        fill="#848484"
      />
    </svg>
  );
};

export const Queues = () => {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M11.0898 21.5C10.66 21.5 10.2919 21.3468 9.98544 21.0403C9.67898 20.7338 9.52574 20.3657 9.52574 19.9359V11.0898C9.52574 10.66 9.67898 10.2918 9.98544 9.98538C10.2919 9.67891 10.66 9.52568 11.0898 9.52568H19.9359C20.3657 9.52568 20.7339 9.67891 21.0403 9.98538C21.3468 10.2918 21.5 10.66 21.5 11.0898V19.9359C21.5 20.3657 21.3468 20.7338 21.0403 21.0403C20.7339 21.3468 20.3657 21.5 19.9359 21.5H11.0898ZM11.0898 20.2436H19.9359C20.0129 20.2436 20.0834 20.2115 20.1475 20.1474C20.2116 20.0833 20.2437 20.0128 20.2437 19.9359V11.0898C20.2437 11.0128 20.2116 10.9423 20.1475 10.8782C20.0834 10.8141 20.0129 10.7821 19.9359 10.7821H11.0898C11.0129 10.7821 10.9424 10.8141 10.8783 10.8782C10.8142 10.9423 10.7821 11.0128 10.7821 11.0898V19.9359C10.7821 20.0128 10.8142 20.0833 10.8783 20.1474C10.9424 20.2115 11.0129 20.2436 11.0898 20.2436ZM6.01292 17.6436V7.57696C6.01292 7.14714 6.16615 6.77901 6.47262 6.47256C6.77907 6.16609 7.1472 6.01286 7.57702 6.01286H17.6436C17.822 6.01286 17.9712 6.07327 18.0915 6.19411C18.2117 6.31492 18.2718 6.46491 18.2718 6.64408C18.2718 6.82325 18.2117 6.97223 18.0915 7.09103C17.9712 7.20983 17.822 7.26923 17.6436 7.26923H7.57702C7.50008 7.26923 7.42957 7.30129 7.36547 7.36541C7.30135 7.42951 7.26929 7.50002 7.26929 7.57696V17.6436C7.26929 17.8219 7.20888 17.9712 7.08807 18.0914C6.96723 18.2117 6.81723 18.2718 6.63807 18.2718C6.4589 18.2718 6.30992 18.2117 6.19112 18.0914C6.07232 17.9712 6.01292 17.8219 6.01292 17.6436ZM2.50009 14.1308V4.06413C2.50009 3.63433 2.65332 3.2662 2.95979 2.95973C3.26626 2.65326 3.63439 2.50003 4.06419 2.50003H14.1308C14.3091 2.50003 14.4584 2.56045 14.5786 2.68128C14.6989 2.8021 14.759 2.95209 14.759 3.13126C14.759 3.31042 14.6989 3.45941 14.5786 3.57821C14.4584 3.69701 14.3091 3.75641 14.1308 3.75641H4.06419C3.98726 3.75641 3.91674 3.78847 3.85264 3.85258C3.78852 3.91668 3.75647 3.9872 3.75647 4.06413V14.1308C3.75647 14.3091 3.69606 14.4583 3.57524 14.5786C3.45441 14.6988 3.30441 14.759 3.12524 14.759C2.94608 14.759 2.79709 14.6988 2.67829 14.5786C2.55949 14.4583 2.50009 14.3091 2.50009 14.1308Z"
        fill="#848484"
      />
    </svg>
  );
};

export const Setups = () => {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M11.7156 20.75C11.5367 20.75 11.3878 20.6898 11.269 20.5694C11.1502 20.449 11.0908 20.2998 11.0908 20.1218V16.0577C11.0908 15.8839 11.1514 15.7358 11.2724 15.6133C11.3935 15.4908 11.5435 15.4295 11.7224 15.4295C11.9013 15.4295 12.0502 15.4908 12.169 15.6133C12.2878 15.7358 12.3472 15.8839 12.3472 16.0577V17.4667H20.1216C20.2996 17.4667 20.4488 17.5272 20.5692 17.6483C20.6896 17.7693 20.7498 17.9193 20.7498 18.0983C20.7498 18.2772 20.6896 18.4261 20.5692 18.5449C20.4488 18.6637 20.2996 18.7231 20.1216 18.7231H12.3472V20.1218C12.3472 20.2998 12.2867 20.449 12.1656 20.5694C12.0446 20.6898 11.8946 20.75 11.7156 20.75ZM3.87799 18.7231C3.70001 18.7231 3.55082 18.6626 3.43042 18.5415C3.31002 18.4205 3.24982 18.2705 3.24982 18.0915C3.24982 17.9126 3.31002 17.7637 3.43042 17.6449C3.55082 17.5261 3.70001 17.4667 3.87799 17.4667H8.20619C8.38419 17.4667 8.53339 17.5272 8.65379 17.6483C8.77419 17.7693 8.83439 17.9193 8.83439 18.0983C8.83439 18.2772 8.77419 18.4261 8.65379 18.5449C8.53339 18.6637 8.38419 18.7231 8.20619 18.7231H3.87799ZM8.20282 14.6551C8.02388 14.6551 7.87502 14.5949 7.75622 14.4745C7.63742 14.3541 7.57802 14.2049 7.57802 14.027V12.6282H3.87799C3.70001 12.6282 3.55082 12.5677 3.43042 12.4467C3.31002 12.3256 3.24982 12.1756 3.24982 11.9967C3.24982 11.8177 3.31002 11.6689 3.43042 11.5501C3.55082 11.4313 3.70001 11.3719 3.87799 11.3719H7.57802V9.95261C7.57802 9.77461 7.63854 9.62541 7.75959 9.50501C7.88064 9.38461 8.03063 9.32441 8.20957 9.32441C8.38852 9.32441 8.53739 9.38461 8.65619 9.50501C8.77499 9.62541 8.83439 9.77461 8.83439 9.95261V14.027C8.83439 14.2049 8.77387 14.3541 8.65282 14.4745C8.53177 14.5949 8.38177 14.6551 8.20282 14.6551ZM11.719 12.6282C11.541 12.6282 11.3918 12.5677 11.2714 12.4467C11.151 12.3256 11.0908 12.1756 11.0908 11.9967C11.0908 11.8177 11.151 11.6689 11.2714 11.5501C11.3918 11.4313 11.541 11.3719 11.719 11.3719H20.1216C20.2996 11.3719 20.4488 11.4324 20.5692 11.5534C20.6896 11.6745 20.7498 11.8245 20.7498 12.0034C20.7498 12.1823 20.6896 12.3312 20.5692 12.45C20.4488 12.5688 20.2996 12.6282 20.1216 12.6282H11.719ZM15.79 8.56411C15.6111 8.56411 15.4622 8.50391 15.3434 8.38351C15.2246 8.26311 15.1652 8.11392 15.1652 7.93594V3.87824C15.1652 3.70025 15.2257 3.55106 15.3468 3.43066C15.4678 3.31026 15.6178 3.25006 15.7967 3.25006C15.9757 3.25006 16.1246 3.31026 16.2434 3.43066C16.3622 3.55106 16.4216 3.70025 16.4216 3.87824V5.27699H20.1216C20.2996 5.27699 20.4488 5.33751 20.5692 5.45856C20.6896 5.57961 20.7498 5.7296 20.7498 5.90854C20.7498 6.08749 20.6896 6.23636 20.5692 6.35516C20.4488 6.47396 20.2996 6.53336 20.1216 6.53336H16.4216V7.93594C16.4216 8.11392 16.361 8.26311 16.24 8.38351C16.1189 8.50391 15.969 8.56411 15.79 8.56411ZM3.87799 6.53336C3.70001 6.53336 3.55082 6.47284 3.43042 6.35179C3.31002 6.23074 3.24982 6.08074 3.24982 5.90179C3.24982 5.72285 3.31002 5.57399 3.43042 5.45519C3.55082 5.33639 3.70001 5.27699 3.87799 5.27699H12.2806C12.4586 5.27699 12.6077 5.33751 12.7281 5.45856C12.8485 5.57961 12.9087 5.7296 12.9087 5.90854C12.9087 6.08749 12.8485 6.23636 12.7281 6.35516C12.6077 6.47396 12.4586 6.53336 12.2806 6.53336H3.87799Z"
        fill="#848484"
      />
    </svg>
  );
};

export const Menu = () => {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M4.1282 17.5C3.95022 17.5 3.80102 17.4394 3.68062 17.3184C3.56021 17.1973 3.5 17.0473 3.5 16.8684C3.5 16.6894 3.56021 16.5406 3.68062 16.4218C3.80102 16.303 3.95022 16.2436 4.1282 16.2436H13.0833C13.2613 16.2436 13.4105 16.3041 13.5309 16.4252C13.6513 16.5462 13.7115 16.6962 13.7115 16.8751C13.7115 17.0541 13.6513 17.203 13.5309 17.3218C13.4105 17.4406 13.2613 17.5 13.0833 17.5H4.1282ZM4.1282 12.6013C3.95022 12.6013 3.80102 12.5407 3.68062 12.4197C3.56021 12.2986 3.5 12.1486 3.5 11.9697C3.5 11.7907 3.56021 11.6419 3.68062 11.5231C3.80102 11.4043 3.95022 11.3449 4.1282 11.3449H13.0833C13.2613 11.3449 13.4105 11.4054 13.5309 11.5265C13.6513 11.6475 13.7115 11.7975 13.7115 11.9764C13.7115 12.1554 13.6513 12.3043 13.5309 12.4231C13.4105 12.5419 13.2613 12.6013 13.0833 12.6013H4.1282ZM4.1282 7.75638C3.95022 7.75638 3.80102 7.69585 3.68062 7.5748C3.56021 7.45375 3.5 7.30376 3.5 7.12483C3.5 6.94588 3.56021 6.797 3.68062 6.6782C3.80102 6.5594 3.95022 6.5 4.1282 6.5H13.0833C13.2613 6.5 13.4105 6.56053 13.5309 6.68158C13.6513 6.80263 13.7115 6.95263 13.7115 7.13158C13.7115 7.31051 13.6513 7.45938 13.5309 7.57818C13.4105 7.69698 13.2613 7.75638 13.0833 7.75638H4.1282Z"
        fill="#848484"
      />
      <path
        d="M16.5891 15.9468L20.0244 12.5378C20.1803 12.3775 20.2583 12.1937 20.2583 11.9862C20.2583 11.7788 20.1803 11.5972 20.0244 11.4417L16.5994 8.03591C16.4789 7.9154 16.3313 7.85354 16.1567 7.85034C15.9822 7.84714 15.8314 7.909 15.7045 8.03591C15.5776 8.16283 15.5141 8.31197 15.5141 8.48334C15.5141 8.65469 15.5776 8.80383 15.7045 8.93076L18.7859 11.9897L15.6943 15.0622C15.5673 15.1805 15.5039 15.3258 15.5039 15.4981C15.5039 15.6703 15.5673 15.8198 15.6943 15.9468C15.8126 16.0673 15.9596 16.1275 16.1353 16.1275C16.3109 16.1275 16.4622 16.0673 16.5891 15.9468Z"
        fill="#848484"
      />
    </svg>
  );
};
