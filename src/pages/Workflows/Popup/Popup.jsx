import React, { useState, useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import { changeAddForm, changeToSave, createBlock } from "../../../reducer";

import FormPopup from "./FormPopup";
const Popup = ({ onClose, openFormPopup }) => {
    const dispatch = useDispatch();
    const [showFormPopup, setShowFormPopup] = useState(false);
  

    
  
    const closeFormPopup = () => {
      setShowFormPopup(false);
    };
  
    if(showFormPopup){
      return <FormPopup onClose={closeFormPopup} />
    }
    return (

      <div className="flex justify-center items-center bg-opacity-50">
        <div className="bg-white p-4 w-[570px] shadow-md max-h-[80vh] overflow-y-auto">
          <div className="flex justify-between items-center">
            <span className="text-lg font-bold">
              <h1>Add Block</h1>
            </span>
            <button onClick={() =>  
            {onClose();
             dispatch(changeAddForm({ toAdd: false }));
            }} 
            className="text-gray-300 font-medium">
              Close
            </button>
          </div>
          <div className="flex items-center border border-gray-300 rounded-md mt-3 ">
            <div className="ml-2">
              <Search />
            </div>
  
            <input
              type="text"
              placeholder="Type for Search..."
              className="px-2 py-1 focus:outline-none text-black font-semibold flex-grow"
            />
          </div>
  
          <div className="ml-3 mt-6 text-left  text-gray-400 text-sm font-normal">
            <span>Triggers</span>
          </div>
  
          <button
            onClick={() => {
              openFormPopup();
              dispatch(changeAddForm({ toAdd: true }));
            }}
            className=" text-start"
          >
            <div class="flex items-center my-1 mt-3 mx-3 py-2 px-2 font-bold border border-gray-200 rounded-md w-[512px] h-[100px]">
              <div class="flex flex-col">
                <span class="flex items-center text-black/80 gap-4">
                  <Form />
                  <span>Form</span>
                </span>
                <span class="font-normal  text-gray-400 text-[13px]">
                  Select or search the form from the list, that the candidate had
                  to fill out to run the workflow.
                </span>
              </div>
            </div>
          </button>

  
          <button
            onClick={() => {
              alert("on click");
            }}
            className=" text-start"
          >
            <div class="flex items-center my-1 mx-3 py-2 px-2 font-bold border border-gray-200 rounded-md w-[512px] h-[100px]">
              <div class="flex flex-col">
                <span class="flex items-center text-black/80 gap-4">
                  <Switch1 />
                  <span>Switch</span>
                </span>
                <span class="font-normal  text-gray-400 text-[13px]">
                  Select the status that triggers the switch. Each new switch will
                  add a new block, click on the block to configure it.
                </span>
              </div>
            </div>
          </button>
  
          <button
            onClick={() => {
              alert("on click");
            }}
            className=" text-start"
          >
            <div class="flex items-center mt-1 my-1 mx-3 py-2 px-2 font-bold border border-gray-200 rounded-md w-[512px] h-[100px]">
              <div class="flex flex-col">
                <span class="flex items-center text-black/80 gap-4">
                  <FieldValue />
                  <span>Field Value</span>
                </span>
  
                <span class="font-normal  text-gray-400 text-[13px]">
                  Service desk user sets the value to the specific field of the
                  candidateâ€™s case, for example: case status to declined.
                </span>
              </div>
            </div>
          </button>
  
          <button
            onClick={() => {
              alert("on click");
            }}
            className=" text-start"
          >
            <div class="flex items-center mt-1 my-5 mx-3 py-1 px-2 font-bold border border-gray-200 rounded-md w-[512px] h-[100px]">
              <div class="flex flex-col">
                <span class="flex items-center text-black/80 gap-4">
                  <SendEmail />
                  <span>Send Email</span>
                </span>
                <span class="font-normal  text-gray-400 text-[13px]">
                  Service desk user chooses from existing email templates.
                </span>
              </div>
            </div>
          </button>
  
          <div className="ml-3 mt-3 text-left  text-gray-400 text-sm font-normal">
            <span>Actions</span>
          </div>
  
          <button
            onClick={() => {
              alert("on click");
            }}
            className=" text-start"
          >
            <div class="flex items-center mt-3 my-1 mx-3 px-2 font-bold border border-gray-200 rounded-md w-[512px] h-[50px]">
              <div class="flex flex-col">
                <span class="flex items-center text-black/80 gap-4">
                  <Wait />
                  <span>Wait/Pause</span>
                </span>
              </div>
            </div>
          </button>
  
          <button
            onClick={() => {
              alert("on click");
            }}
            className=" text-start"
          >
            <div class="flex items-center mt-1 my-1 mx-3 px-2 font-bold border border-gray-200 rounded-md w-[512px] h-[50px]">
              <div class="flex flex-col">
                <span class="flex items-center text-black/80 gap-4">
                  <StartSub />
                  <span>Start Sub Flow</span>
                </span>
              </div>
            </div>
          </button>
  
          <button
            onClick={() => {
              alert("on click");
            }}
            className=" text-start"
          >
            <div class="flex items-center mt-1 my-1 mx-3 px-2 font-bold border border-gray-200 rounded-md w-[512px] h-[50px]">
              <div class="flex flex-col">
                <span class="flex items-center text-black/80 gap-4">
                  <AddToQueue />
                  <span>Add to Queue</span>
                </span>
              </div>
            </div>
          </button>
  
          <button
            onClick={() => {
              alert("on click");
            }}
            className=" text-start"
          >
            <div class="flex items-center mt-1 my-1 mx-3 px-2 font-bold border border-gray-200 rounded-md w-[512px] h-[50px]">
              <div class="flex flex-col">
                <span class="flex items-center text-black/80 gap-4">
                  <Payment />
                  <span>Payment</span>
                </span>
              </div>
            </div>
          </button>
        </div>
      </div>
    );
  };


  export default Popup;


  export const Form = () => {
    return (
      <svg
        width="36"
        height="36"
        viewBox="0 0 36 36"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <rect width="36" height="36" rx="4" fill="#2F6BBA" />
        <path
          d="M11.5898 25.0833C11.1688 25.0833 10.8125 24.9374 10.5209 24.6458C10.2292 24.3541 10.0834 23.9978 10.0834 23.5768V12.423C10.0834 12.0021 10.2292 11.6458 10.5209 11.3541C10.8125 11.0625 11.1688 10.9166 11.5898 10.9166H24.4103C24.8312 10.9166 25.1875 11.0625 25.4792 11.3541C25.7708 11.6458 25.9167 12.0021 25.9167 12.423V23.5768C25.9167 23.9978 25.7708 24.3541 25.4792 24.6458C25.1875 24.9374 24.8312 25.0833 24.4103 25.0833H11.5898ZM11.5898 23.8333H24.4103C24.4744 23.8333 24.5331 23.8066 24.5866 23.7531C24.64 23.6997 24.6667 23.6409 24.6667 23.5768V12.423C24.6667 12.3589 24.64 12.3002 24.5866 12.2467C24.5331 12.1933 24.4744 12.1666 24.4103 12.1666H11.5898C11.5257 12.1666 11.4669 12.1933 11.4135 12.2467C11.3601 12.3002 11.3334 12.3589 11.3334 12.423V23.5768C11.3334 23.6409 11.3601 23.6997 11.4135 23.7531C11.4669 23.8066 11.5257 23.8333 11.5898 23.8333ZM15.5 21.9583C15.6774 21.9583 15.8259 21.8984 15.9455 21.7788C16.0652 21.6591 16.125 21.5106 16.125 21.3333C16.125 21.1559 16.0652 21.0074 15.9455 20.8878C15.8259 20.7681 15.6774 20.7083 15.5 20.7083H13C12.8227 20.7083 12.6742 20.7681 12.5545 20.8878C12.4349 21.0074 12.375 21.1559 12.375 21.3333C12.375 21.5106 12.4349 21.6591 12.5545 21.7788C12.6742 21.8984 12.8227 21.9583 13 21.9583H15.5ZM20.125 18.4423L19.3766 17.6939C19.2527 17.5699 19.1063 17.5088 18.9375 17.5104C18.7687 17.512 18.6224 17.5774 18.4984 17.7067C18.383 17.8306 18.3246 17.977 18.323 18.1458C18.3213 18.3146 18.3825 18.4609 18.5064 18.5849L19.5978 19.6762C19.7484 19.8268 19.9242 19.9022 20.125 19.9022C20.3259 19.9022 20.5016 19.8268 20.6523 19.6762L23.5144 16.814C23.6384 16.6901 23.7017 16.5451 23.7043 16.3789C23.707 16.2128 23.6437 16.0651 23.5144 15.9359C23.3852 15.8066 23.2367 15.7419 23.0689 15.7419C22.9012 15.7419 22.7527 15.8066 22.6234 15.9359L20.125 18.4423ZM15.5 18.6249C15.6774 18.6249 15.8259 18.5651 15.9455 18.4454C16.0652 18.3258 16.125 18.1773 16.125 17.9999C16.125 17.8226 16.0652 17.6741 15.9455 17.5544C15.8259 17.4348 15.6774 17.375 15.5 17.375H13C12.8227 17.375 12.6742 17.4348 12.5545 17.5544C12.4349 17.6741 12.375 17.8226 12.375 17.9999C12.375 18.1773 12.4349 18.3258 12.5545 18.4454C12.6742 18.5651 12.8227 18.6249 13 18.6249H15.5ZM15.5 15.2916C15.6774 15.2916 15.8259 15.2318 15.9455 15.1121C16.0652 14.9925 16.125 14.844 16.125 14.6666C16.125 14.4893 16.0652 14.3408 15.9455 14.2211C15.8259 14.1015 15.6774 14.0416 15.5 14.0416H13C12.8227 14.0416 12.6742 14.1015 12.5545 14.2211C12.4349 14.3408 12.375 14.4893 12.375 14.6666C12.375 14.844 12.4349 14.9925 12.5545 15.1121C12.6742 15.2318 12.8227 15.2916 13 15.2916H15.5Z"
          fill="white"
        />
      </svg>
    );
  };
  export const Switch1 = () => {
    return (
      <svg
        width="36"
        height="36"
        viewBox="0 0 36 36"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <rect width="36" height="36" rx="4" fill="#8C57BE" />
        <path
          d="M12.4891 25.5962C11.911 25.5962 11.4189 25.3936 11.0129 24.9886C10.6069 24.5835 10.4039 24.0916 10.4039 23.5129C10.4039 23.046 10.5415 22.6349 10.8166 22.2797C11.0917 21.9245 11.4402 21.678 11.8622 21.5401V14.4728C11.4402 14.335 11.0917 14.0864 10.8166 13.7269C10.5415 13.3674 10.4039 12.9542 10.4039 12.4873C10.4039 11.9086 10.6065 11.4167 11.0116 11.0116C11.4167 10.6065 11.9085 10.404 12.4872 10.404C12.9541 10.404 13.3673 10.5415 13.7268 10.8166C14.0863 11.0917 14.335 11.4403 14.4728 11.8623H17.8174L16.5193 10.5722C16.39 10.4478 16.3254 10.3026 16.3254 10.1368C16.3254 9.97088 16.39 9.8233 16.5193 9.69402C16.6485 9.56475 16.797 9.50012 16.9648 9.50012C17.1325 9.50012 17.281 9.56475 17.4103 9.69402L19.6763 11.96C19.8269 12.1107 19.9023 12.2864 19.9023 12.4873C19.9023 12.6881 19.8269 12.8639 19.6763 13.0145L17.3975 15.2934C17.2735 15.4173 17.1285 15.4806 16.9624 15.4833C16.7962 15.4859 16.6485 15.4226 16.5193 15.2934C16.39 15.1641 16.3254 15.0156 16.3254 14.8479C16.3254 14.6801 16.39 14.5316 16.5193 14.4024L17.8174 13.1123H14.4728C14.3692 13.4413 14.1988 13.7244 13.9616 13.9616C13.7244 14.1988 13.4413 14.3692 13.1122 14.4728V21.5273C13.5342 21.6652 13.8828 21.9138 14.1579 22.2733C14.433 22.6328 14.5705 23.046 14.5705 23.5129C14.5705 24.0916 14.3682 24.5835 13.9635 24.9886C13.5587 25.3936 13.0673 25.5962 12.4891 25.5962ZM23.511 10.404C24.0891 10.404 24.5812 10.6063 24.9872 11.0111C25.3931 11.4158 25.5961 11.9072 25.5961 12.4854C25.5961 13.0636 25.3938 13.5556 24.9891 13.9616C24.5843 14.3676 24.0929 14.5706 23.5147 14.5706C22.9365 14.5706 22.4445 14.3682 22.0385 13.9635C21.6325 13.5588 21.4295 13.0673 21.4295 12.4892C21.4295 11.911 21.6319 11.4189 22.0366 11.013C22.4413 10.607 22.9328 10.404 23.511 10.404ZM12.4872 24.3462C12.7234 24.3462 12.9213 24.2663 13.081 24.1066C13.2407 23.9469 13.3206 23.749 13.3206 23.5129C13.3206 23.2768 13.2407 23.0788 13.081 22.9191C12.9213 22.7594 12.7234 22.6795 12.4872 22.6795C12.2511 22.6795 12.0532 22.7594 11.8935 22.9191C11.7338 23.0788 11.6539 23.2768 11.6539 23.5129C11.6539 23.749 11.7338 23.9469 11.8935 24.1066C12.0532 24.2663 12.2511 24.3462 12.4872 24.3462ZM12.4872 13.3206C12.7234 13.3206 12.9213 13.2408 13.081 13.081C13.2407 12.9213 13.3206 12.7234 13.3206 12.4873C13.3206 12.2512 13.2407 12.0533 13.081 11.8935C12.9213 11.7338 12.7234 11.654 12.4872 11.654C12.2511 11.654 12.0532 11.7338 11.8935 11.8935C11.7338 12.0533 11.6539 12.2512 11.6539 12.4873C11.6539 12.7234 11.7338 12.9213 11.8935 13.081C12.0532 13.2408 12.2511 13.3206 12.4872 13.3206ZM23.5128 13.3206C23.7489 13.3206 23.9469 13.2408 24.1066 13.081C24.2663 12.9213 24.3462 12.7234 24.3462 12.4873C24.3462 12.2512 24.2663 12.0533 24.1066 11.8935C23.9469 11.7338 23.7489 11.654 23.5128 11.654C23.2767 11.654 23.0788 11.7338 22.9191 11.8935C22.7594 12.0533 22.6795 12.2512 22.6795 12.4873C22.6795 12.7234 22.7594 12.9213 22.9191 13.081C23.0788 13.2408 23.2767 13.3206 23.5128 13.3206Z"
          fill="white"
        />
        <path
          d="M24.1365 22.4699C24.1365 23.3903 23.3903 24.1365 22.4698 24.1365H17.4871C17.1407 24.1365 16.8599 23.8557 16.8599 23.5093C16.8599 23.1629 17.1407 22.8821 17.4871 22.8821H22.4654C22.6955 22.8821 22.882 22.6955 22.882 22.4654V17.4488C22.882 17.1024 23.1629 16.8215 23.5093 16.8215C23.8557 16.8215 24.1365 17.1024 24.1365 17.4488V22.4699Z"
          fill="white"
        />
      </svg>
    );
  };
  export const FieldValue = () => {
    return (
      <svg
        width="36"
        height="36"
        viewBox="0 0 36 36"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <rect width="36" height="36" rx="4" fill="#BE57AE" />
        <path
          d="M16.8173 19.7885L14.8814 17.8526C14.766 17.7372 14.621 17.6782 14.4463 17.6755C14.2717 17.6728 14.124 17.7319 14.0032 17.8526C13.8825 17.9733 13.8221 18.1197 13.8221 18.2917C13.8221 18.4637 13.8825 18.61 14.0032 18.7308L16.2901 21.0176C16.4407 21.1683 16.6165 21.2436 16.8173 21.2436C17.0182 21.2436 17.1939 21.1683 17.3446 21.0176L21.9808 16.3814C22.0962 16.266 22.1552 16.121 22.1579 15.9463C22.1605 15.7717 22.1015 15.624 21.9808 15.5032C21.86 15.3825 21.7137 15.3221 21.5417 15.3221C21.3697 15.3221 21.2233 15.3825 21.1026 15.5032L16.8173 19.7885ZM18.0014 25.9167C16.9065 25.9167 15.8773 25.7089 14.9138 25.2933C13.9504 24.8778 13.1123 24.3138 12.3996 23.6015C11.6869 22.8891 11.1227 22.0514 10.707 21.0884C10.2912 20.1253 10.0834 19.0964 10.0834 18.0014C10.0834 16.9065 10.2912 15.8773 10.7067 14.9138C11.1223 13.9504 11.6862 13.1123 12.3986 12.3996C13.111 11.6869 13.9487 11.1227 14.9117 10.707C15.8747 10.2912 16.9037 10.0834 17.9986 10.0834C19.0936 10.0834 20.1228 10.2912 21.0862 10.7067C22.0497 11.1223 22.8877 11.6862 23.6004 12.3986C24.3131 13.111 24.8773 13.9487 25.2931 14.9117C25.7088 15.8747 25.9167 16.9037 25.9167 17.9986C25.9167 19.0936 25.7089 20.1228 25.2933 21.0862C24.8778 22.0497 24.3138 22.8877 23.6015 23.6004C22.8891 24.3131 22.0514 24.8773 21.0884 25.2931C20.1253 25.7088 19.0964 25.9167 18.0014 25.9167ZM18 24.6667C19.8611 24.6667 21.4375 24.0209 22.7292 22.7292C24.0209 21.4375 24.6667 19.8611 24.6667 18C24.6667 16.1389 24.0209 14.5625 22.7292 13.2709C21.4375 11.9792 19.8611 11.3334 18 11.3334C16.1389 11.3334 14.5625 11.9792 13.2709 13.2709C11.9792 14.5625 11.3334 16.1389 11.3334 18C11.3334 19.8611 11.9792 21.4375 13.2709 22.7292C14.5625 24.0209 16.1389 24.6667 18 24.6667Z"
          fill="white"
        />
      </svg>
    );
  };
  export const SendEmail = () => {
    return (
      <svg
        width="36"
        height="36"
        viewBox="0 0 36 36"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <rect width="36" height="36" rx="4" fill="#399585" />
        <path
          d="M24.6667 12.9999H11.3334V22.7434C11.3334 22.8182 11.3574 22.8796 11.4055 22.9277C11.4536 22.9758 11.515 22.9999 11.5898 22.9999H18.4167C18.5941 22.9999 18.7426 23.0597 18.8622 23.1793C18.9819 23.299 19.0417 23.4475 19.0417 23.6248C19.0417 23.8022 18.9819 23.9507 18.8622 24.0703C18.7426 24.19 18.5941 24.2498 18.4167 24.2498H11.5898C11.1688 24.2498 10.8125 24.104 10.5209 23.8123C10.2292 23.5207 10.0834 23.1644 10.0834 22.7434V13.2563C10.0834 12.8354 10.2292 12.479 10.5209 12.1874C10.8125 11.8957 11.1688 11.7499 11.5898 11.7499H24.4102C24.8312 11.7499 25.1875 11.8957 25.4792 12.1874C25.7708 12.479 25.9167 12.8354 25.9167 13.2563V18.4165C25.9167 18.5939 25.8568 18.7424 25.7372 18.8621C25.6175 18.9817 25.469 19.0415 25.2917 19.0415C25.1143 19.0415 24.9658 18.9817 24.8462 18.8621C24.7265 18.7424 24.6667 18.5939 24.6667 18.4165V12.9999ZM11.3334 12.9999V22.9999V19.0415V19.1441V12.9999ZM18 17.1665L24.6667 12.9999V14.2018L18.3975 18.1296C18.2692 18.2076 18.1368 18.2466 18 18.2466C17.8633 18.2466 17.7308 18.2076 17.6026 18.1296L11.3334 14.2659V12.9999L18 17.1665ZM24.3158 24.2498H21.1731C20.9957 24.2498 20.8472 24.19 20.7276 24.0703C20.6079 23.9507 20.5481 23.8022 20.5481 23.6248C20.5481 23.4475 20.6079 23.299 20.7276 23.1793C20.8472 23.0597 20.9957 22.9999 21.1731 22.9999H24.3238L23.2212 21.8973C23.0972 21.7733 23.0361 21.627 23.0377 21.4582C23.0393 21.2894 23.1047 21.143 23.234 21.0191C23.3579 20.9037 23.5043 20.8452 23.6731 20.8436C23.8419 20.842 23.9883 20.9032 24.1122 21.0271L26.1827 23.0976C26.2607 23.1756 26.3178 23.2579 26.3542 23.3444C26.3905 23.4309 26.4086 23.5244 26.4086 23.6248C26.4086 23.7199 26.3905 23.8121 26.3542 23.9013C26.3178 23.9905 26.2607 24.0741 26.1827 24.1521L24.1042 26.2306C23.9888 26.346 23.8459 26.4045 23.6755 26.4061C23.5051 26.4077 23.3579 26.3465 23.234 26.2226C23.1186 26.1072 23.0609 25.9635 23.0609 25.7915C23.0609 25.6195 23.1186 25.4758 23.234 25.3604L24.3158 24.2498Z"
          fill="white"
        />
      </svg>
    );
  };
  export const Wait = () => {
    return (
      <svg
        width="36"
        height="36"
        viewBox="0 0 36 36"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <rect width="36" height="36" rx="4" fill="#D4853F" />
        <path
          d="M14.5865 24.6667H21.4134V22.1667C21.4134 21.218 21.0817 20.4065 20.4183 19.7324C19.7548 19.0582 18.9487 18.7212 18 18.7212C17.0513 18.7212 16.2452 19.0585 15.5817 19.7333C14.9183 20.408 14.5865 21.2192 14.5865 22.1667V24.6667ZM18 17.2789C18.9487 17.2789 19.7548 16.9415 20.4183 16.2667C21.0817 15.592 21.4134 14.7809 21.4134 13.8334V11.3334H14.5865V13.8334C14.5865 14.7821 14.9183 15.5935 15.5817 16.2676C16.2452 16.9418 17.0513 17.2789 18 17.2789ZM12.375 25.9167C12.1979 25.9167 12.0495 25.8567 11.9297 25.7369C11.8099 25.6171 11.75 25.4685 11.75 25.2914C11.75 25.1142 11.8099 24.9658 11.9297 24.8462C12.0495 24.7265 12.1979 24.6667 12.375 24.6667H13.3365V22.1667C13.3365 21.2286 13.5932 20.3747 14.1066 19.605C14.6199 18.8352 15.3002 18.3002 16.1475 18C15.3002 17.6945 14.6199 17.1582 14.1066 16.3911C13.5932 15.624 13.3365 14.7714 13.3365 13.8334V11.3334H12.375C12.1979 11.3334 12.0495 11.2734 11.9297 11.1536C11.8099 11.0337 11.75 10.8852 11.75 10.7081C11.75 10.5309 11.8099 10.3825 11.9297 10.2629C12.0495 10.1432 12.1979 10.0834 12.375 10.0834H23.625C23.802 10.0834 23.9505 10.1433 24.0703 10.2631C24.1901 10.383 24.25 10.5315 24.25 10.7086C24.25 10.8858 24.1901 11.0342 24.0703 11.1539C23.9505 11.2735 23.802 11.3334 23.625 11.3334H22.6634V13.8334C22.6634 14.7714 22.4067 15.624 21.8934 16.3911C21.38 17.1582 20.6997 17.6945 19.8525 18C20.6997 18.3002 21.38 18.8352 21.8934 19.605C22.4067 20.3747 22.6634 21.2286 22.6634 22.1667V24.6667H23.625C23.802 24.6667 23.9505 24.7266 24.0703 24.8465C24.1901 24.9663 24.25 25.1148 24.25 25.292C24.25 25.4691 24.1901 25.6175 24.0703 25.7372C23.9505 25.8568 23.802 25.9167 23.625 25.9167H12.375Z"
          fill="white"
        />
      </svg>
    );
  };
  export const StartSub = () => {
    return (
      <svg
        width="36"
        height="36"
        viewBox="0 0 36 36"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <rect width="36" height="36" rx="4" fill="#3B3D40" />
        <path
          d="M18 26.2612C17.1945 26.2612 16.5137 25.9831 15.9576 25.427C15.4015 24.8709 15.1235 24.1901 15.1235 23.3846C15.1235 22.6945 15.3361 22.0911 15.7613 21.5745C16.1865 21.058 16.7244 20.7265 17.3751 20.5801V18.625H14.0898C13.6756 18.625 13.3209 18.4775 13.0259 18.1825C12.7309 17.8875 12.5834 17.5329 12.5834 17.1186V15.46H11.2933C11.0799 15.46 10.9011 15.3878 10.7567 15.2434C10.6123 15.099 10.5402 14.9201 10.5402 14.7067V10.8798C10.5402 10.663 10.6123 10.4827 10.7567 10.339C10.9011 10.1953 11.0799 10.1235 11.2933 10.1235H15.1203C15.3371 10.1235 15.5174 10.1956 15.6611 10.34C15.8048 10.4844 15.8767 10.6632 15.8767 10.8766V14.7036C15.8767 14.9204 15.8045 15.1007 15.6601 15.2444C15.5157 15.3881 15.3369 15.46 15.1235 15.46H13.8334V17.1186C13.8334 17.1934 13.8574 17.2548 13.9055 17.3029C13.9536 17.351 14.015 17.375 14.0898 17.375H21.9103C21.9851 17.375 22.0465 17.351 22.0946 17.3029C22.1427 17.2548 22.1667 17.1934 22.1667 17.1186V15.3878C21.5161 15.2415 20.9782 14.91 20.553 14.3935C20.1277 13.8769 19.9151 13.2735 19.9151 12.5834C19.9151 11.7779 20.1932 11.0971 20.7494 10.541C21.3055 9.98486 21.9863 9.70679 22.7918 9.70679C23.5973 9.70679 24.2781 9.98486 24.8342 10.541C25.3902 11.0971 25.6683 11.7779 25.6683 12.5834C25.6683 13.2735 25.4557 13.8769 25.0305 14.3935C24.6053 14.91 24.0673 15.2415 23.4167 15.3878V17.1186C23.4167 17.5329 23.2692 17.8875 22.9742 18.1825C22.6792 18.4775 22.3246 18.625 21.9103 18.625H18.625V20.5801C19.2757 20.7265 19.8136 21.058 20.2388 21.5745C20.664 22.0911 20.8766 22.6945 20.8766 23.3846C20.8766 24.1901 20.5986 24.8709 20.0424 25.427C19.4862 25.9831 18.8054 26.2612 18 26.2612ZM22.7934 14.21C23.2431 14.21 23.6264 14.051 23.9432 13.7331C24.2599 13.4152 24.4183 13.0314 24.4183 12.5817C24.4183 12.1319 24.2594 11.7487 23.9415 11.4319C23.6236 11.1151 23.2397 10.9567 22.79 10.9567C22.3403 10.9567 21.957 11.1157 21.6403 11.4336C21.3235 11.7515 21.1651 12.1353 21.1651 12.5851C21.1651 13.0348 21.324 13.418 21.642 13.7348C21.9599 14.0516 22.3437 14.21 22.7934 14.21ZM11.7901 14.21H14.6267V11.3734H11.7901V14.21ZM18.0018 25.0112C18.4515 25.0112 18.8347 24.8523 19.1515 24.5344C19.4683 24.2165 19.6267 23.8326 19.6267 23.3829C19.6267 22.9332 19.4677 22.5499 19.1498 22.2332C18.8319 21.9164 18.4481 21.758 17.9983 21.758C17.5486 21.758 17.1654 21.917 16.8486 22.2349C16.5318 22.5528 16.3734 22.9366 16.3734 23.3863C16.3734 23.836 16.5324 24.2193 16.8503 24.5361C17.1682 24.8528 17.552 25.0112 18.0018 25.0112Z"
          fill="white"
        />
      </svg>
    );
  };
  export const AddToQueue = () => {
    return (
      <svg
        width="36"
        height="36"
        viewBox="0 0 36 36"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <rect width="36" height="36" rx="4" fill="#848484" />
        <path
          d="M18.2565 25.9167C17.8355 25.9167 17.4792 25.7708 17.1875 25.4792C16.8959 25.1875 16.75 24.8312 16.75 24.4103V18.2565C16.75 17.8355 16.8959 17.4792 17.1875 17.1875C17.4792 16.8959 17.8355 16.75 18.2565 16.75H24.4103C24.8312 16.75 25.1875 16.8959 25.4792 17.1875C25.7708 17.4792 25.9167 17.8355 25.9167 18.2565V24.4103C25.9167 24.8312 25.7708 25.1875 25.4792 25.4792C25.1875 25.7708 24.8312 25.9167 24.4103 25.9167H18.2565ZM18.2565 24.6667H24.4103C24.4744 24.6667 24.5331 24.64 24.5866 24.5866C24.64 24.5331 24.6667 24.4744 24.6667 24.4103V18.2565C24.6667 18.1923 24.64 18.1336 24.5866 18.0801C24.5331 18.0267 24.4744 18 24.4103 18H18.2565C18.1923 18 18.1336 18.0267 18.0801 18.0801C18.0267 18.1336 18 18.1923 18 18.2565V24.4103C18 24.4744 18.0267 24.5331 18.0801 24.5866C18.1336 24.64 18.1923 24.6667 18.2565 24.6667ZM13.4167 22.0545V14.9231C13.4167 14.5022 13.5625 14.1459 13.8542 13.8542C14.1459 13.5625 14.5022 13.4167 14.9231 13.4167H22.0545C22.2318 13.4167 22.3803 13.4765 22.5 13.5962C22.6197 13.7159 22.6795 13.8644 22.6795 14.0417C22.6795 14.2191 22.6197 14.3676 22.5 14.4872C22.3803 14.6069 22.2318 14.6667 22.0545 14.6667H14.9231C14.859 14.6667 14.8002 14.6934 14.7468 14.7468C14.6934 14.8002 14.6667 14.859 14.6667 14.9231V22.0545C14.6667 22.2318 14.6069 22.3803 14.4872 22.5C14.3676 22.6197 14.2191 22.6795 14.0417 22.6795C13.8644 22.6795 13.7159 22.6197 13.5962 22.5C13.4765 22.3803 13.4167 22.2318 13.4167 22.0545ZM10.0834 18.7212V11.5898C10.0834 11.1688 10.2292 10.8125 10.5209 10.5209C10.8125 10.2292 11.1688 10.0834 11.5898 10.0834H18.7212C18.8985 10.0834 19.047 10.1432 19.1667 10.2629C19.2863 10.3825 19.3461 10.531 19.3461 10.7084C19.3461 10.8857 19.2863 11.0342 19.1667 11.1539C19.047 11.2735 18.8985 11.3334 18.7212 11.3334H11.5898C11.5257 11.3334 11.4669 11.3601 11.4135 11.4135C11.3601 11.4669 11.3334 11.5257 11.3334 11.5898V18.7212C11.3334 18.8985 11.2735 19.047 11.1539 19.1667C11.0342 19.2863 10.8857 19.3461 10.7084 19.3461C10.531 19.3461 10.3825 19.2863 10.2629 19.1667C10.1432 19.047 10.0834 18.8985 10.0834 18.7212Z"
          fill="white"
        />
      </svg>
    );
  };
  export const Payment = () => {
    return (
      <svg
        width="36"
        height="36"
        viewBox="0 0 36 36"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <rect width="36" height="36" rx="4" fill="#D0AE48" />
        <path
          d="M25.9167 13.2564V22.7435C25.9167 23.1645 25.7708 23.5208 25.4792 23.8125C25.1875 24.1041 24.8312 24.25 24.4103 24.25H11.5898C11.1688 24.25 10.8125 24.1041 10.5209 23.8125C10.2292 23.5208 10.0834 23.1645 10.0834 22.7435V13.2564C10.0834 12.8355 10.2292 12.4792 10.5209 12.1875C10.8125 11.8958 11.1688 11.75 11.5898 11.75H24.4103C24.8312 11.75 25.1875 11.8958 25.4792 12.1875C25.7708 12.4792 25.9167 12.8355 25.9167 13.2564ZM11.3334 15.0032H24.6667V13.2564C24.6667 13.1923 24.64 13.1335 24.5866 13.0801C24.5331 13.0267 24.4744 13 24.4103 13H11.5898C11.5257 13 11.4669 13.0267 11.4135 13.0801C11.3601 13.1335 11.3334 13.1923 11.3334 13.2564V15.0032ZM11.3334 17.6634V22.7435C11.3334 22.8077 11.3601 22.8664 11.4135 22.9199C11.4669 22.9733 11.5257 23 11.5898 23H24.4103C24.4744 23 24.5331 22.9733 24.5866 22.9199C24.64 22.8664 24.6667 22.8077 24.6667 22.7435V17.6634H11.3334Z"
          fill="white"
        />
      </svg>
    );
  };
  export const Search = () => {
    return (
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M9.16669 14.7916C7.36434 14.7916 5.83737 14.1658 4.58577 12.9142C3.33417 11.6626 2.70837 10.1357 2.70837 8.33331C2.70837 6.53097 3.33417 5.00399 4.58577 3.7524C5.83737 2.5008 7.36434 1.875 9.16669 1.875C10.969 1.875 12.496 2.5008 13.7476 3.7524C14.9992 5.00399 15.625 6.53097 15.625 8.33331C15.625 9.13247 15.496 9.86778 15.238 10.5393C14.98 11.2107 14.6154 11.8419 14.1442 12.4327L17.8462 16.1346C17.9669 16.2553 18.0259 16.4017 18.0233 16.5737C18.0206 16.7457 17.9616 16.8921 17.8462 17.0128C17.7255 17.1335 17.5778 17.1939 17.4031 17.1939C17.2284 17.1939 17.0807 17.1335 16.96 17.0128L13.258 13.3109C12.6672 13.782 12.0374 14.1466 11.3686 14.4046C10.6998 14.6626 9.96584 14.7916 9.16669 14.7916ZM9.16669 13.5417C10.609 13.5417 11.8376 13.0342 12.8526 12.0192C13.8676 11.0043 14.375 9.77562 14.375 8.33331C14.375 6.89101 13.8676 5.66237 12.8526 4.6474C11.8376 3.63244 10.609 3.12496 9.16669 3.12496C7.72438 3.12496 6.49574 3.63244 5.48077 4.6474C4.46581 5.66237 3.95833 6.89101 3.95833 8.33331C3.95833 9.77562 4.46581 11.0043 5.48077 12.0192C6.49574 13.0342 7.72438 13.5417 9.16669 13.5417Z"
          fill="#848484"
        />
      </svg>
    );
  };
  export const FlowChart = () => {
    return (
      <svg
        width="36"
        height="36"
        viewBox="0 0 36 36"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <rect width="36" height="36" rx="4" fill="#3B3D40" />
        <path
          d="M20.7083 24.0255V22.7915H18.8814C18.4658 22.7915 18.1108 22.6444 17.8165 22.35C17.5222 22.0557 17.375 21.7007 17.375 21.2851V14.4582H15.2916V15.6922C15.2916 16.0437 15.1685 16.3426 14.9223 16.5888C14.676 16.8351 14.3771 16.9582 14.0256 16.9582H11.141C10.7895 16.9582 10.4906 16.8351 10.2444 16.5888C9.99813 16.3426 9.875 16.0437 9.875 15.6922V11.9743C9.875 11.6228 9.99813 11.3239 10.2444 11.0776C10.4906 10.8314 10.7895 10.7083 11.141 10.7083H14.0256C14.3771 10.7083 14.676 10.8314 14.9223 11.0776C15.1685 11.3239 15.2916 11.6228 15.2916 11.9743V13.2083H20.7083V11.9743C20.7083 11.6228 20.8315 11.3239 21.0777 11.0776C21.324 10.8314 21.6228 10.7083 21.9743 10.7083H24.859C25.2105 10.7083 25.5093 10.8314 25.7556 11.0776C26.0018 11.3239 26.125 11.6228 26.125 11.9743V15.6922C26.125 16.0437 26.0018 16.3426 25.7556 16.5888C25.5093 16.8351 25.2105 16.9582 24.859 16.9582H21.9743C21.6228 16.9582 21.324 16.8351 21.0777 16.5888C20.8315 16.3426 20.7083 16.0437 20.7083 15.6922V14.4582H18.625V21.2851C18.625 21.3599 18.649 21.4214 18.6971 21.4695C18.7452 21.5175 18.8066 21.5416 18.8814 21.5416H20.7083V20.3076C20.7083 19.9561 20.8315 19.6572 21.0777 19.411C21.324 19.1647 21.6228 19.0416 21.9743 19.0416H24.859C25.2105 19.0416 25.5093 19.1647 25.7556 19.411C26.0018 19.6572 26.125 19.9561 26.125 20.3076V24.0255C26.125 24.377 26.0018 24.6759 25.7556 24.9222C25.5093 25.1684 25.2105 25.2915 24.859 25.2915H21.9743C21.6228 25.2915 21.324 25.1684 21.0777 24.9222C20.8315 24.6759 20.7083 24.377 20.7083 24.0255ZM21.9583 15.7083H24.875V11.9582H21.9583V15.7083ZM21.9583 24.0416H24.875V20.2915H21.9583V24.0416ZM11.125 15.7083H14.0417V11.9582H11.125V15.7083Z"
          fill="white"
        />
      </svg>
    );
  };